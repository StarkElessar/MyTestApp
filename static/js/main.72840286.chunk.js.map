{"version":3,"sources":["context/GlobalContext.js","context/actions.js","context/reducer.js","context/GlobalState.js","components/App/PrivateRoute/index.js","components/LogIn/index.jsx","components/MainPage/img/settings.svg","components/MainPage/NewChannelModal/index.jsx","components/MainPage/index.jsx","components/NewChannel/Message/index.jsx","components/NewChannel/index.jsx","components/UserSettings/index.jsx","components/App/index.js","index.js"],"names":["createContext","AUTHENTICATED","UPDATE_EMAIL","UPDATE_PASSWORD","UPDATE_FIRST_NAME","UPDATE_LAST_NAME","UPDATE_CHANNEL_ID","UPDATE_CHANNEL_TITLE","UPDATE_CHANNEL_DESCRIPTION","UPDATE_INPUT_TEXT_MESSAGE","SEND_MESSAGE","CLEAR_GLOBAL_STATE","initialState","isAuthenticated","JSON","parse","localStorage","getItem","user","email","password","firstName","lastName","avatar","channel","id","title","description","inputTextMessage","messages","reducer","state","action","immutableState","fromJS","type","setIn","toJS","text","updateIn","push","Map","getIn","size","message","GlobalState","children","useReducer","actions","dispatch","authenticate","updateEmail","updatePassword","updateFirstName","updateLastName","updateChannelId","updateChannelTitle","updateChannelDescription","updateInputMessage","sendMessage","clearGlobalState","getActions","GlobalContext","Provider","value","PrivateRoute","Component","component","rest","useContext","render","location","to","pathname","from","LogIn","className","htmlFor","onChange","event","target","name","placeholder","required","disabled","onClick","setItem","NewChannelModal","closeModal","isVisible","history","useHistory","useEffect","stopPropagation","Date","now","MainPage","useState","setIsVisible","toggleShowModal","src","alt","iconSettings","Message","userName","style","messageStyle","NewChannel","height","width","itemCount","length","itemSize","index","preventDefault","setTimeout","Math","random","toString","substring","floor","UserSettings","App","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72840286.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport default createContext();","export const AUTHENTICATED = 'AUTHENTICATED';\nexport const UPDATE_EMAIL = 'UPDATE_EMAIL';\nexport const UPDATE_PASSWORD = 'UPDATE_PASSWORD';\nexport const UPDATE_FIRST_NAME = 'UPDATE_FIRST_NAME';\nexport const UPDATE_LAST_NAME = 'UPDATE_LAST_NAME';\nexport const UPDATE_CHANNEL_ID = 'UPDATE_CHANNEL_ID';\nexport const UPDATE_CHANNEL_TITLE = 'UPDATE_CHANNEL_TITLE';\nexport const UPDATE_CHANNEL_DESCRIPTION = 'UPDATE_CHANNEL_DESCRIPTION';\nexport const UPDATE_INPUT_TEXT_MESSAGE = 'UPDATE_INPUT_TEXT_MESSAGE';\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\nexport const CLEAR_GLOBAL_STATE = 'CLEAR_GLOBAL_STATE';\n\nexport const getActions = (dispatch) => ({\n  authenticate: () => dispatch({ type: AUTHENTICATED }),\n  updateEmail: (email) => dispatch({ type: UPDATE_EMAIL, email }),\n  updatePassword: (password) => dispatch({ type: UPDATE_PASSWORD, password }),\n  updateFirstName: (firstName) => dispatch({ type: UPDATE_FIRST_NAME, firstName}),\n  updateLastName: (lastName) => dispatch({ type: UPDATE_LAST_NAME, lastName }),\n  updateChannelId: (id) => dispatch({ type: UPDATE_CHANNEL_ID, id}),\n  updateChannelTitle: (title) => dispatch({ type: UPDATE_CHANNEL_TITLE, title}),\n  updateChannelDescription: (description) => dispatch({ type: UPDATE_CHANNEL_DESCRIPTION, description }),\n  updateInputMessage: (text) => dispatch({ type: UPDATE_INPUT_TEXT_MESSAGE, text}),\n  sendMessage: (message) => dispatch({ type: SEND_MESSAGE, message}),\n  clearGlobalState: () => dispatch({ type: CLEAR_GLOBAL_STATE }),\n});","import { fromJS, Map } from 'immutable';\nimport {\n  AUTHENTICATED,\n  UPDATE_EMAIL,\n  UPDATE_PASSWORD,\n  UPDATE_FIRST_NAME,\n  UPDATE_LAST_NAME,\n  UPDATE_CHANNEL_ID,\n  UPDATE_CHANNEL_TITLE,\n  UPDATE_CHANNEL_DESCRIPTION,\n  UPDATE_INPUT_TEXT_MESSAGE,\n  SEND_MESSAGE,\n  CLEAR_GLOBAL_STATE,\n} from './actions';\n\nexport const initialState = {\n  isAuthenticated: JSON.parse(localStorage.getItem('isAuthenticated')) || false,\n  user: {\n    email: '',\n    password: '',\n    firstName: 'Stark',\n    lastName: '',\n    avatar: 'https://themified.com/friend-finder/images/users/user-4.jpg',\n  },\n  channel: {\n    id: null,\n    title: '',\n    description: '',\n    inputTextMessage: '',\n    messages: [],\n  },\n};\n\nexport const reducer = (state, action) => {\n  const immutableState = fromJS(state);\n\n  switch (action.type) {\n    case AUTHENTICATED:\n      return immutableState.setIn(['isAuthenticated'], true).toJS();\n    case UPDATE_EMAIL:\n      return immutableState.setIn(['user', 'email'], action.email).toJS();\n    case UPDATE_PASSWORD:\n      return immutableState.setIn(['user', 'password'], action.password).toJS();\n    case UPDATE_FIRST_NAME:\n      return immutableState.setIn(['user', 'firstName'], action.firstName).toJS();\n    case UPDATE_LAST_NAME:\n      return immutableState.setIn(['user', 'lastName'], action.lastName).toJS();\n    case UPDATE_CHANNEL_ID:\n      return immutableState.setIn(['channel', 'id'], action.id).toJS();\n    case UPDATE_CHANNEL_TITLE:\n      return immutableState.setIn(['channel', 'title'], action.title).toJS();\n    case UPDATE_CHANNEL_DESCRIPTION:\n      return immutableState.setIn(['channel', 'description'], action.description).toJS();\n    case UPDATE_INPUT_TEXT_MESSAGE:\n      return immutableState.setIn(['channel', 'inputTextMessage'], action.text).toJS();\n    case SEND_MESSAGE:\n      return immutableState.updateIn(['channel', 'messages'], (messages) => (\n          messages.push(Map({\n            id: immutableState.getIn(['channel', 'messages']).size + 1,\n            ...action.message\n          }))\n        )\n      ).toJS();\n    case CLEAR_GLOBAL_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n};","import React, { useReducer } from 'react';\n\nimport GlobalContext from './GlobalContext';\nimport { getActions } from './actions';\nimport { initialState, reducer } from './reducer';\n\nconst GlobalState = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const actions = getActions(dispatch);\n\n  return (\n    <GlobalContext.Provider value={{ state, actions }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n\nexport default GlobalState;\n","import React, { useContext } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport GlobalContext from '../../../context/GlobalContext';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { state: { isAuthenticated } } = useContext(GlobalContext);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => (\n        isAuthenticated\n          ? <Component />\n          : <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: location }\n              }}\n            />\n      )}\n    />\n  );\n};\n\nexport default PrivateRoute;","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport GlobalContext from '../../context/GlobalContext';\nimport './style.css';\n\nconst LogIn = () => {\n  const {\n    state: {\n      user: {\n        email,\n        password\n      }\n    },\n    actions: {\n      authenticate,\n      updateEmail,\n      updatePassword\n    }\n  } = useContext(GlobalContext);\n  const onEmailChange = (event) => updateEmail(event.target.value);\n  const onPasswordChange = (event) => updatePassword(event.target.value);\n  const authenticateUser = () => {\n    localStorage.setItem('isAuthenticated', true);\n    authenticate();\n  };\n\n  return (\n    <div className='login__container'>\n      <div className='login__wrapper'>\n        <form>\n          <div className='label__input'>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              value={email}\n              onChange={onEmailChange}\n              type=\"text\"\n              id='email'\n              name='user_email'\n              placeholder='Enter Your Email' \n              required\n            />\n          </div>\n          <div className='label__input'>\n            <label htmlFor=\"pass\">Password</label>\n            <input\n              value={password}\n              onChange={onPasswordChange}\n              type=\"password\"\n              id='pass'\n              name='user_pass'\n              placeholder='Enter Your Password' \n              required\n            />\n          </div>\n          <div className='label__input'>\n            <NavLink to='/main-page'>\n              <button disabled={!email || !password} onClick={authenticateUser}>\n                Login\n              </button>\n            </NavLink>\n          </div>\n        </form>\n      </div>\n    </div>\n\n  );\n};\n\nexport default LogIn;\n","export default __webpack_public_path__ + \"static/media/settings.0ce7a5bb.svg\";","import React, { useContext, useEffect } from \"react\";\nimport GlobalContext from \"../../../context/GlobalContext\";\nimport { useHistory } from \"react-router\";\n\nconst NewChannelModal = ({ closeModal, isVisible }) => {\n  const {\n    state: {\n      channel: {\n        id,\n        title,\n        description\n      }\n    },\n    actions: {\n      updateChannelId,\n      updateChannelTitle,\n      updateChannelDescription\n    }\n  } = useContext(GlobalContext);\n  const history = useHistory();\n  const onChannelTitleChange = (event) => updateChannelTitle(event.target.value);\n  const onChannelDescriptionChange = (event) => updateChannelDescription(event.target.value);\n  const onCreateClick = () => updateChannelId(Date.now());\n  const stopCloseModal = (event) => event.stopPropagation();\n\n  useEffect(() => {\n    if (id) history.push(`/new-channel/${id}`);\n  }, [id]);\n\n  return (\n    <div onClick={closeModal} className={isVisible ? 'newChannel show' : 'newChannel'}>\n      <div onClick={stopCloseModal}>\n        <h2>New Channel</h2>\n        <form>\n          <input onChange={onChannelTitleChange} type=\"text\" placeholder='Channel Title..' value={title} required />\n          <input onChange={onChannelDescriptionChange} type=\"text\" placeholder='Channel Description' value={description} required />\n          <input onClick={onCreateClick} disabled={!title || !description} type=\"submit\" value='Create' />\n        </form>\n      </div>\n    </div>\n  )\n};\n\nexport default NewChannelModal;","import React, { useState, useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport './style.css';\nimport GlobalContext from \"../../context/GlobalContext\";\nimport iconSettings from './img/settings.svg'\nimport NewChannelModal from \"./NewChannelModal\";\n\nconst MainPage = () => {\n  const {\n    state: {\n      user: {\n        firstName,\n        avatar,\n      }\n    }\n  } = useContext(GlobalContext);\n  \n  const [isVisible, setIsVisible] = useState(false);\n  const toggleShowModal = () => setIsVisible(!isVisible);\n\n  return (\n    <div className='main-page__wrapper'>\n      <div className=\"header\">\n        <div className=\"container\">\n          <button onClick={toggleShowModal}>Create a channel</button>\n          <div className=\"mini-nav\">\n            <span className='user-login'>{firstName}</span>\n            <div className=\"user__avatar\">\n              <img src={avatar} alt=\"user__avatar\" />\n            </div>\n            <NavLink className='icon-settings' to='/user-settings'>\n              <img className='icon-settings' src={iconSettings} alt=\"icon-settings\" />\n              <span className='icon-label'>User Settings</span>\n            </NavLink>\n          </div>\n        </div>\n      </div>\n      <div className=\"body\">\n        <h1>Welcome to test chat</h1>\n      </div>\n      <NewChannelModal closeModal={toggleShowModal} isVisible={isVisible}/>\n    </div>\n  )\n};\n\nexport default MainPage;","import React from \"react\";\n\nconst Message = ({ userName, text, avatar, style }) => {\n  const messageStyle = userName === 'echo' ? 'echo__message' : 'user__message'\n  \n  return (\n    <div className={messageStyle} style={style}>\n      <div className=\"user__avatar\">\n        <img src={avatar} alt=\"user-avatar\" />\n      </div>\n      <div className=\"text__block\">\n        <span className=\"user__name\">{userName}</span>\n        <span className=\"user__messages\">{text}</span>\n      </div>\n    </div>\n  )\n};\n\nexport default Message;","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FixedSizeList as List } from \"react-window\";\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport './style.css';\nimport GlobalContext from \"../../context/GlobalContext\";\nimport Message from \"./Message\";\n\nconst robotAvatar = 'https://thumbs.dreamstime.com/b/robot-icon-robot-icon-vector-flat-illustration-graphic-web-design-isolated-black-background-artificial-intelligen-188465910.jpg';\n\nconst NewChannel = () => {\n  const {\n    state: {\n      user: {\n        firstName,\n        lastName,\n        avatar,\n      },\n      channel: {\n        title,\n        description,\n        inputTextMessage,\n        messages\n      },\n    },\n    actions: {\n      clearGlobalState,\n      updateInputMessage,\n      sendMessage\n    }\n  } = useContext(GlobalContext);\n\n  const onInputTextMessageChange = (event) => updateInputMessage(event.target.value);\n\n  const onLogoutClick = () => {\n    localStorage.setItem('isAuthenticated', false);\n    clearGlobalState();\n  };\n\n  const onSendMessageClick = (event) => {\n    event.preventDefault();\n\n    sendMessage({\n      userName: `${firstName} ${lastName}`,\n      text: inputTextMessage,\n      avatar\n    });\n    updateInputMessage('');\n\n    setTimeout(() => {\n      sendMessage({\n        userName: 'echo',\n        text: Math.random().toString(36).substring(2, 20),\n        avatar: robotAvatar,\n      });\n    }, Math.floor(Math.random() * 2000) + 1000);\n  };\n\n  return (\n    <div className='new-channel__wrapper'>\n      <div className=\"new-channel__body\">\n        <div className=\"new-channel__header\">\n          <div className=\"title-block\">\n            <h2>{title}</h2>\n            <span>{description}</span>\n          </div>\n          <NavLink to='/login'>\n            <button onClick={onLogoutClick} className='logout__btn'>Logout</button>\n          </NavLink>\n        </div>\n        <div className=\"chat__body\">\n          <AutoSizer>\n            {({ height, width }) => (\n              <List\n                itemCount={messages.length}\n                itemSize={80}\n                height={height}\n                width={width}\n              >\n                {({ index, style }) => {\n                  const { id, userName, text, avatar } = messages[index];\n\n                  return (\n                    <Message\n                      key={id}\n                      userName={userName}\n                      text={text}\n                      avatar={avatar}\n                      style={style}\n                    />\n                  );\n                }}\n              </List>\n            )}\n          </AutoSizer>\n        </div>\n        <form className=\"chat__footer\">\n          <textarea\n            onChange={onInputTextMessageChange}\n            value={inputTextMessage}\n            placeholder='Type Your Message..'\n            name=\"user_text\"\n            id=\"user_text\"\n          />\n          <button onClick={onSendMessageClick}>Send</button>\n        </form>\n      </div>\n    </div>\n  )\n};\n\nexport default NewChannel;","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport './style.css';\nimport GlobalContext from \"../../context/GlobalContext\";\n\nconst UserSettings = () => {\n  const {\n    state: {\n      user: {\n        firstName,\n        lastName\n      }\n    },\n    actions: {\n      updateFirstName,\n      updateLastName\n    }\n  } = useContext(GlobalContext);\n  \n  const onChangeFirstName = (event) => updateFirstName(event.target.value);\n  const onChangeLastName = (event) => updateLastName(event.target.value);\n\n  return (\n    <div className=\"settings__container\">\n      <div className=\"settings__wrapper\">\n        <h2>User Settings</h2>\n        <div className=\"col-1\">\n          <div className=\"avatar\">\n            <img src=\"https://themified.com/friend-finder/images/users/user-4.jpg\" alt=\"user-avatar\" />\n          </div>\n        </div>\n        <div className=\"col-2\">\n          <div className='label__input'>\n            <label htmlFor=\"pass\">First Name:</label>\n            <input\n              onChange={onChangeFirstName}\n              className='input__setting'\n              type=\"text\"\n              placeholder='Enter your First Name..'\n              value={firstName}\n            />\n          </div>\n          <div className='label__input'>\n            <label htmlFor=\"pass\">Last Name:</label>\n            <input\n              onChange={onChangeLastName}\n              className='input__setting'\n              type=\"text\"\n              placeholder='Enter your Last Name..'\n              value={lastName}\n            />\n          </div>\n          <NavLink to='/main-page'>\n            <button disabled={!firstName || !lastName} className='apply-btn'>Apply</button>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n\n  )\n};\n\nexport default UserSettings;","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nimport './style.css';\nimport GlobalState from '../../context/GlobalState';\nimport PrivateRoute from './PrivateRoute'\nimport LogIn from '../LogIn';\nimport MainPage from '../MainPage';\nimport NewChannel from '../NewChannel';\nimport UserSettings from '../UserSettings';\n\nconst App = () => (\n  <GlobalState>\n    <BrowserRouter>\n      <div className='wrapper'>\n        <Switch>\n          <Route path='/login' component={LogIn} />\n          <PrivateRoute exact path='/' component={MainPage} />\n          <PrivateRoute path='/main-page' component={MainPage} />\n          <PrivateRoute path='/new-channel/:id' component={NewChannel} />\n          <PrivateRoute path='/user-settings' component={UserSettings} />\n          <Redirect to=\"/login\" />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  </GlobalState>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}